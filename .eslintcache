[{"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/index.js":"1","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/App.js":"2","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/reportWebVitals.js":"3","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/security/SignUpComponent.js":"4","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/service/auth-service.js":"5","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/security/LoginComponent.js":"6","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/CrudTableComponent.js":"7","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/ExamEventTile.js":"8","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/CampEventTile.js":"9","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/Camps.js":"10","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/Camp.js":"11","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/CampRegistrations.js":"12","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/CampDetails.js":"13","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/EditCampRegistrationModal.js":"14","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/ExamHelp.js":"15","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/AddCamp.js":"16","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/AddParticipantToCampModal.js":"17","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/AddParticipantToExamModal.js":"18","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/CampRegistrationOptionChooserModal.js":"19","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/ExamDetails.js":"20","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/ExamRegistrations.js":"21","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/EditExamRegistrationModal.js":"22","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/Exam.js":"23","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/AddExam.js":"24","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/Exams.js":"25","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/People.js":"26","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/Profile.js":"27","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/EventWall.js":"28","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/TournamentEventTile.js":"29","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/TournamentRegistrationOptionChooserModal.js":"30","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/Tournaments.js":"31","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/Tournament.js":"32","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/TournamentDetails.js":"33","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/TournamentRegistrations.js":"34","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/EditTournamentRegistrationModal.js":"35"},{"size":754,"mtime":1607698737843,"results":"36","hashOfConfig":"37"},{"size":14178,"mtime":1609286181395,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1606838134886,"results":"39","hashOfConfig":"37"},{"size":7013,"mtime":1606873032651,"results":"40","hashOfConfig":"37"},{"size":850,"mtime":1606912733681,"results":"41","hashOfConfig":"37"},{"size":5912,"mtime":1608514782858,"results":"42","hashOfConfig":"37"},{"size":8959,"mtime":1608500014685,"results":"43","hashOfConfig":"37"},{"size":5606,"mtime":1609023367410,"results":"44","hashOfConfig":"37"},{"size":5818,"mtime":1609004379052,"results":"45","hashOfConfig":"37"},{"size":3710,"mtime":1608519287431,"results":"46","hashOfConfig":"37"},{"size":1540,"mtime":1608656598292,"results":"47","hashOfConfig":"37"},{"size":8269,"mtime":1608941950016,"results":"48","hashOfConfig":"37"},{"size":17940,"mtime":1609023503343,"results":"49","hashOfConfig":"37"},{"size":7919,"mtime":1608655834314,"results":"50","hashOfConfig":"37"},{"size":895,"mtime":1608397681649,"results":"51","hashOfConfig":"37"},{"size":16207,"mtime":1609021932594,"results":"52","hashOfConfig":"37"},{"size":10287,"mtime":1608692629053,"results":"53","hashOfConfig":"37"},{"size":6018,"mtime":1608941083044,"results":"54","hashOfConfig":"37"},{"size":8079,"mtime":1609004289118,"results":"55","hashOfConfig":"37"},{"size":13133,"mtime":1609025940062,"results":"56","hashOfConfig":"37"},{"size":6961,"mtime":1609026235344,"results":"57","hashOfConfig":"37"},{"size":4098,"mtime":1609026187581,"results":"58","hashOfConfig":"37"},{"size":2021,"mtime":1609026418316,"results":"59","hashOfConfig":"37"},{"size":10868,"mtime":1609026525566,"results":"60","hashOfConfig":"37"},{"size":3709,"mtime":1609026658351,"results":"61","hashOfConfig":"37"},{"size":1761,"mtime":1609026745137,"results":"62","hashOfConfig":"37"},{"size":2385,"mtime":1609026888467,"results":"63","hashOfConfig":"37"},{"size":1512,"mtime":1609200500275,"results":"64","hashOfConfig":"37"},{"size":6139,"mtime":1609271634016,"results":"65","hashOfConfig":"37"},{"size":14775,"mtime":1609279027660,"results":"66","hashOfConfig":"37"},{"size":3758,"mtime":1609281915344,"results":"67","hashOfConfig":"37"},{"size":1954,"mtime":1609599998597,"results":"68","hashOfConfig":"37"},{"size":29757,"mtime":1609600488527,"results":"69","hashOfConfig":"37"},{"size":8951,"mtime":1609599680559,"results":"70","hashOfConfig":"37"},{"size":14468,"mtime":1609601395261,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"cqc0cp",{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/index.js",[],["149","150"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/App.js",["151","152"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/reportWebVitals.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/security/SignUpComponent.js",["153"],"import React, {Component} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport {isEmail} from \"validator\";\nimport Card from \"react-bootstrap/Card\";\n\nimport AuthService from \"../../service/auth-service\";\n\n\nconst API_URL = \"http://localhost:8081/auth/\";\n\nconst required = value => {\n    if ( !value )\n    {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>            \n        );\n    }\n};\n\nconst email = value => {\n    if ( !isEmail(value) )\n    {\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n};\n\nconst vpassword = value => {\n    if ( value.length < 3 || value.length > 40 )\n    {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 3 and 40 characters.\n            </div>\n        );\n    }\n};\n\n\nclass SignUpComponent extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);        \n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            successful: false,\n            message: \"\"\n        };\n    }\n\n    onChangeEmail(e)\n    {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e)\n    {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e)\n    {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false\n        });\n\n        this.form.validateAll();\n\n        if ( this.checkBtn.context._errors.length === 0 )\n        {\n            AuthService.register(\n                this.state.email,\n                this.state.password\n            )\n            .then(\n                response => {\n                    this.setState({\n                        message: response.data.message,\n                        successful: true\n                    });\n                },\n                error => {\n                    const resMessage = \n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage\n                    });\n                }\n            );\n        }\n    }\n\n    render()\n    {\n        return(\n            <div className=\"row\">\n                <div className=\"col-md-4\"></div>\n                <div className=\"col-md-4\" style={{marginTop: '50px'}}>\n                    <Card>\n                        <Card.Body>\n                            <div className=\"text-center\">\n                                <img \n                                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                                    alt=\"profile-img\"\n                                    className=\"profile-img-card\"\n                                />\n                            </div>\n                            <Form\n                                onSubmit={this.handleRegister}\n                                ref = { c => {\n                                    this.form = c;\n                                }}\n                            >\n                                {!this.state.successful && (\n                                    <div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"email\">Email</label>\n                                            <Input \n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                name=\"email\"\n                                                value={this.state.email}\n                                                onChange={this.onChangeEmail}\n                                                validations={[required, email]}\n                                            />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\">Password</label>\n                                            <Input \n                                                type=\"password\"\n                                                className=\"form-control\"\n                                                name=\"password\"\n                                                value={this.state.password}\n                                                onChange={this.onChangePassword}\n                                                validations={[required, vpassword]}\n                                            />                                            \n                                        </div>\n                                        <div className=\"form-group\" style={{marginBottom: '0px'}}>\n                                            <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                                        </div>                                        \n                                    </div>\n                                )}\n                                {this.state.message && (\n                                    <div className=\"form-group\">\n                                        <div\n                                            className={\n                                                this.state.successful\n                                                    ? \"alert alert-success\"\n                                                    : \"alert alert-danger\"\n                                            }\n                                            role=\"alert\"\n                                        >\n                                            {this.state.message}\n                                        </div>\n                                    </div>\n                                )}\n                                <CheckButton \n                                    style={{display: \"none\"}}\n                                    ref = { c => {\n                                        this.checkBtn = c;\n                                    } }\n                                />\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"col-md-4\"></div>\n            </div>\n        );\n    }\n}\n\nexport default SignUpComponent;","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/service/auth-service.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/security/LoginComponent.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/CrudTableComponent.js",["154","155","156","157","158","159","160","161"],"import React, { Component } from \"react\";\nimport {\n     Container,\n     Row,\n     Col,     \n     Button\n     } from \"react-bootstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\n//import \"./../App.css\";\n//import AddItemModal from \"./AddItemModal\";\n//import EditItemModal from \"./EditItemModal\";\n\n\nclass CrudTable extends Component\n{    \n    constructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state = {\t\t\t\n            items: [],             \n            addItemModalShow: false,\n            editItemModalShow: false,\n            selectedRowsIds: [],\n            itemToUpdate: {\n                id: null,\n                firstName: null,\n                lastName: null,\n                dateOfBirth: null                \n            },            \n        }\n        this.fillTable = this.fillTable.bind(this);  \n        this.unselectAllRows = this.unselectAllRows.bind(this);\n        // this.editSelectedItem = this.editSelectedItem.bind(this);\n        // this.deleteSelectedItems = this.deleteSelectedItems.bind(this);       \n    }\n    \n    fillTable()\n    {        \n        fetch(this.props.itemsUrl)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({                \n                items: data,                \n            })\n        });         \n    }\n\n    unselectAllRows()\n    {\n        this.setState({ selectedRowsIds: [] })\n    }\n\n    // editSelectedItem()\n    // {   \n    //     if ( this.state.selectedRowsIds.length != 0 )\n    //     {\n    //         if ( this.state.selectedRowsIds.length == 1 )\n    //         {\n    //             fetch(this.props.itemsUrl + this.state.selectedRowsIds[0])\n    //             .then(response => response.json())\n    //             .then(data => {\n    //                 this.setState({                \n    //                     itemToUpdate: data,                        \n    //                 }); \n    //                 console.log(\"item to update: \" + this.state.itemToUpdate.id);       \n    //             })\n    //             .then(() => {\n    //                 this.setState({\n    //                     editItemModalShow: true,    \n    //                 })\n    //             });         \n    //         }\n    //         else alert(\"Please choose only one item to edit\"); \n    //     }\n    //     else alert(\"Please choose a item to edit\");\n    // }\n\n    // deleteSelectedItems()\n    // {   \n    //     if ( this.state.selectedRowsIds.length != 0 )\n    //     {\n    //         Promise.all( \n    //             this.state.selectedRowsIds.map( (id) => {             \n    //                 return fetch( this.props.itemsUrl + id, {\n    //                    method: 'DELETE',\n    //                    header: {'Accept':'application/json',\n    //                             'Content-Type':'application/json', } \n    //                 } )\n    //             } )\n    //         )\n    //         .then( (result) => {\n    //             this.state.selectedRowsIds = [];\n    //             this.fillTable();\n    //         },\n    //         (error) => {\n    //             console.log(\"not deleted\");\n    //         } )\n    //     } \n    //     else alert(\"Please select at least one item to delete\");\n    // }\n   \n    componentDidMount()\n    {  \n        this.fillTable();\n    }\n   \n  render()\n  {     \n    const tableRowEvents = {\n        onClick: (e, row, rowIndex) => {  \n            if ( this.state.selectedRowsIds.length > 0  )\n                this.state.selectedRowsIds = [];   \n\n            this.state.selectedRowsIds.push(row.id);                        \n            this.props.selectedItemId(this.state.selectedRowsIds);\n            //this.editSelectedItem();            \n        }\n    }\n\n    const selectRow = {\n        mode: \"checkbox\",\n        style: { background: \"lightgray\" },\n        clickToSelect: false,\n        onSelect: (row, isSelect, rowIndex, e) => {\n            if ( isSelect && !this.state.selectedRowsIds.includes(row.id))          \n                this.state.selectedRowsIds.push(row.id);            \n            \n            if ( !isSelect && this.state.selectedRowsIds.includes(row.id))\n                this.state.selectedRowsIds.splice(this.state.selectedRowsIds.indexOf(row.id), 1);\n\n            this.props.selectedIds(this.state.selectedRowsIds);\n        },\n        onSelectAll: (isSelect, rows, e) => {            \n            if ( isSelect )\n                this.state.selectedRowsIds = rows.map( (row) => {return row.id} );\n            else\n                this.state.selectedRowsIds = [];\n            \n            this.props.selectedIds(this.state.selectedRowsIds);\n        },        \n        selected: this.state.selectedRowsIds,\n    }\n\n    const sizePerPageRenderer = ({\n        options,\n        currSizePerPage,\n        onSizePerPageChange\n      }) => (\n        <>\n        <div className=\"btn-group\" role=\"group\">\n          {\n            options.map(option => (\n              <button\n                key={ option.text }\n                type=\"button\"\n                onClick={ () => onSizePerPageChange(option.page) }\n                className={ `btn ${currSizePerPage === `${option.page}` ? 'btn btn-primary btn-sm' : 'btn-secondary btn-sm'}` }\n              >\n                { option.text }\n              </button>\n            ))\n          }\n        </div>\n\n        </>\n      );\n      \n    const pagination = paginationFactory({\n        sizePerPageList: [ \n            {\n                text: '10th', value: 10\n            },\n            {\n                text: '15th', value: 15\n            },\n            {\n                text: '20th', value: 20\n            },\n            {\n                text: 'All', value: this.state.items.length\n            }\n        ],\n        sizePerPageRenderer\n    }, )\n\n    return (\n    <div>\n        {/* <div className=\"content\"> */}\n\t\t{/* <Container fluid> */}\n\t\t  {/* <Row> */}\n\t\t\t{/* <Col md={12}> */}\n\t\t\t \n                {/* <div class=\"crud-button-group\">                     \n                    <Button variant=\"info\" onClick={() => {this.setState({ addItemModalShow: true }) }}>New...</Button>{' '}\n                    <Button variant=\"warning\" onClick={() => {this.editSelectedItem()}}>Update...</Button>{' '}\n                    <Button variant=\"danger\" onClick={() => {this.deleteSelectedItems()}}>Remove</Button>                    \n                </div>    */}\n                {/* <EditItemModal   refreshItemTable={this.fillTable}                                         \n                                    itemId={this.state.selectedRowsIds[0]}                                    \n                                    trianglersUrl={this.props.trianglersUrl}\n                                    show={this.state.editItemModalShow} \n                                    onHide={() => {                                       \n                                        this.setState({\n                                            editItemModalShow: false,\n                                        });\n                                        this.state.selectedRowsIds = [];\n                                    }}                                                                     \n                /> */}\n                        \n                {/* <AddItemModal    refreshItemTable={this.fillTable} \n                                    trianglersUrl={this.props.trianglersUrl}\n                                    show={this.state.addItemModalShow} \n                                    onHide={() => {                                       \n                                        this.setState({\n                                            addItemModalShow: false,\n                                        });                                            \n                                        this.state.selectedRowsIds = [];\n                                    }}\n                /> */} \n                \n              \n                <BootstrapTable     id=\"crudTable\" \n                                    keyField='id'\n                                    data={ this.state.items }\n                                    columns={ this.props.tableColumns }\n                                    bootstrap4 = { true }\n                                    hover = { true }\n                                    bordered = { false }\n                                    rowEvents = { tableRowEvents }\n                                    selectRow = { selectRow }\n                                    filter = { filterFactory() }\n                                    pagination = { pagination }                                                                     \n                >                    \n                </BootstrapTable>\n\t\t\t{/* </Col> */}\n\t\t  {/* </Row> */}\n\t\t{/* </Container> */}\n\t  </div>\n\t);\n  }\n}\n\nexport default CrudTable;\n","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/ExamEventTile.js",["162","163","164","165"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/CampEventTile.js",["166","167"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/Camps.js",["168"],"import React, {Component} from \"react\";\nimport CrudTableComponent from \"../../CrudTableComponent\";\nimport {Card} from \"react-bootstrap\";\nimport {textFilter} from 'react-bootstrap-table2-filter';\n\nimport AuthService from \"../../../service/auth-service\";\n\n\nconst CAMP_EVENTS_URL = \"http://localhost:8081/camp_events\";\nconst EVENTS_API_URL = \"http://localhost:8081/events\";\n\n\nconst columns = [\n    {\n        dataField: \"id\",\n        sort: false,\n        hidden: true\n    },\n    {\n        dataField: \"eventName\",\n        text: \"Event name\",\n        sort: true, \n        filter: textFilter()           \n    },\n    {\n        dataField: \"startDate\", \n        text: \"Start date\",\n        sort: true,\n        type: \"date\",\n        filter: textFilter(),                       \n    },\n    {            \n        dataField: \"campRegistrations.length\",\n        text: \"Persons signed in\",\n        sort: false,\n        style:  { \"text-align\": \"center\" },\n    }          \n];\n\n\nclass CampsComponent extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            selectedRowsIds: null\n        }\n        this.handleRowClick = this.handleRowClick.bind(this);\n        this.handleRowSelection = this.handleRowSelection.bind(this);\n        this.handleDeleteCamp = this.handleDeleteCamp.bind(this);\n\n        this.crudTableRef = React.createRef();\n    }\n\n    handleRowClick(selectedRowId)\n    {\n        this.setState({\n            selectedRowsIds: selectedRowId\n        });\n\n        this.props.history.push(\"/camp_component/\" + selectedRowId[0]);\n    }\n\n    handleRowSelection(selectedRows)\n    {\n        this.setState({\n            selectedRowsIds: selectedRows\n        });\n    }\n\n    handleDeleteCamp()\n    {   \n        if ( this.state.selectedRowsIds != null && this.state.selectedRowsIds.length == 1 )\n        {\n            if ( !window.confirm(\"Are you sure?\") )\t\t\t\t\t\t\t\t\t\t\n\t\t        return;\n            \n            fetch(EVENTS_API_URL + \"/\" + this.state.selectedRowsIds[0], {\n                method: \"DELETE\",\n                header : {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(result => {\n                this.setState({ selectedRowsIds: [] });\n                this.crudTableRef.current.unselectAllRows();\n                this.crudTableRef.current.fillTable();\n            },\n            error => {\n                console.log(\"Item not deleted\");\n            })\n        }            \n        else alert(\"Please select one camp to remove\");\n    }\n\n    render()\n    {\n        const currentUser = AuthService.getCurrentUser();        \n        this.props.navbarControlsHandler();\n\n        return(\n            currentUser != null && currentUser.roles.includes(\"ROLE_ADMIN\") ?\n            ( \n                <div>\n                    <Card>\n                        <Card.Body>\n                            <Card.Text>\n                                <CrudTableComponent itemsUrl={CAMP_EVENTS_URL}\n                                                    tableColumns={columns} \n                                                    selectedItemId={this.handleRowClick} \n                                                    selectedIds={this.handleRowSelection}\n                                                    ref={this.crudTableRef}\n                                />             \n                            </Card.Text>\n                        </Card.Body>\n                    </Card>                    \n                </div>\n            ) :\n            ( <h2>You do not have priviledges  granted to view this section.</h2> )\n        );\n    }\n}\n\nexport default CampsComponent;","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/Camp.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/CampRegistrations.js",["169","170"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/CampDetails.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/EditCampRegistrationModal.js",["171","172"],"import React, {Component} from \"react\";\nimport {\n    Modal, \n    Form,\n    Button,\n    Row,\n    Container\n    } from \"react-bootstrap\";\nimport Select from \"react-select\";\n\nimport AuthService from \"../../../service/auth-service\";\n\n\nconst currentUser = AuthService.getCurrentUser();\nconst CAMP_REGISTRATIONS = \"http://localhost:8081/camp_registrations\"; \nconst CAMP_EVENTS = \"http://localhost:8081/camp_events\"; \n\n\nclass EditCampRegistrationModal extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            itemToUpdate: {\n                id: null,\n                user: {\n                    id: null,\n                    fullName: \"\",\n                    email: \"\",\n                    password: \"\",\n                    country: \"\",\n                    roles: [],\n                    rank: null,\n                    club: null,\n                    branchChief: null\n                },\n                feeReceived: false,\n                sayonaraMeetingParticipation: false,\n                clothingSize: null,\n                accommodation: false\n            },\n            clothingSizes: []\n        }\n        this.loadItemToUpdate = this.loadItemToUpdate.bind(this);\n        this.handleUpdateRegistration = this.handleUpdateRegistration.bind(this);\n    }\n\n    componentDidMount()\n    {        \n        fetch(CAMP_EVENTS + \"/\" + this.props.eventId + \"/clothing_sizes\")\n        .then(response => response.json())\n        .then((data) => {                \n            let cs = [];\n            cs.push( { value: null, label: \"-\" } );\n            data.map((clothingSize) => {\n                cs.push( { value: clothingSize.id, label: clothingSize.clothingSizeName } )\n            })                \n            this.setState({ clothingSizes: cs });\n        })            \n    }\n\n    loadItemToUpdate()\n    {        \n        fetch(CAMP_REGISTRATIONS + \"/\" + this.props.itemId)\n        .then(response => response.json())\n        .then(data => {\n            let cs;\n            if ( data.clothingSize == null )\n                cs = {\n                    value: null,\n                    label: \"-\"\n                }\n            else \n                cs = {\n                    value: data.clothingSize.id,\n                    label: data.clothingSize.clothingSizeName\n                }\n            this.setState({ itemToUpdate: {...data, clothingSize: cs} })\n        })\n    }\n\n    handleUpdateRegistration(e)\n    {\n        e.preventDefault();\n\n        let cs;\n        if ( this.state.itemToUpdate.clothingSize.value == null && this.state.itemToUpdate.clothingSize.label == \"-\" )\n            cs = null;\n        else\n            cs = {\n                id: this.state.itemToUpdate.clothingSize.value,\n                clothingSizeName: this.state.itemToUpdate.clothingSize.label\n            };\n        let itemToUpdate = {...this.state.itemToUpdate, clothingSize: cs};\n        \n        fetch(CAMP_REGISTRATIONS, {\n            method: \"PUT\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(itemToUpdate)           \n        })\n        .then(response => response.json())\n        .then(result => {            \n            this.props.onHide();\n        },\n        error => {\n            console.log(\"not updated\");\n        });\n    }\n\n    render()\n    {  \n        const clothingSizesSelectStyles = {\n            container: base => ({\n                ...base,\n                flex: 1,                \n            })\n        };\n\n        return (\n            currentUser != null && currentUser.roles.includes(\"ROLE_ADMIN\") ?\n            (\n            <Modal \n                show={this.props.show}                \n                onHide={this.props.onHide}\n                onEnter={this.loadItemToUpdate}\n                animation=\"true\"\n                size=\"lg\"\n                centered=\"true\"                \n            >\n                <Form onSubmit={this.handleUpdateRegistration}>\n                    <Modal.Header>\n                        {this.state.itemToUpdate.user.fullName}\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Container>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Fee received</Form.Label>\n                                <Form.Check column sm=\"4\"\n                                    type=\"checkbox\"\n                                    name=\"feeReceived\" \n                                    style={{display: \"flex\", alignItems: \"center\"}}\n                                    checked={this.state.itemToUpdate.feeReceived}\n                                    onChange={e => { this.setState({ itemToUpdate: {...this.state.itemToUpdate, feeReceived: e.target.checked} }) }}\n                                />                            \n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Sayonara participation</Form.Label>\n                                <Form.Check column sm=\"4\"\n                                    type=\"checkbox\"\n                                    name=\"sayonaraMeetingParticipation\" \n                                    style={{display: \"flex\", alignItems: \"center\"}}\n                                    checked={this.state.itemToUpdate.sayonaraMeetingParticipation}\n                                    onChange={e => { this.setState({ itemToUpdate: {...this.state.itemToUpdate, sayonaraMeetingParticipation: e.target.checked} }) }}\n                                />\n                            </Form.Group>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Clothing size</Form.Label>\n                                <Select\n                                    styles={clothingSizesSelectStyles}\n                                    options={this.state.clothingSizes}                                    \n                                    value={this.state.itemToUpdate.clothingSize}\n                                    onChange={clothingSize => {                                        \n                                        this.setState({ itemToUpdate: {...this.state.itemToUpdate, clothingSize: clothingSize} })                                        \n                                    }}\n                                />\n                            </Form.Group>                        \n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Accommodation</Form.Label>\n                                <Form.Check column sm=\"4\"\n                                    type=\"checkbox\"\n                                    name=\"accommodation\" \n                                    style={{display: \"flex\", alignItems: \"center\"}}\n                                    checked={this.state.itemToUpdate.accommodation}\n                                    onChange={e => { this.setState({ itemToUpdate: {...this.state.itemToUpdate, accommodation: e.target.checked} }) }}\n                                />\n                            </Form.Group>\n                        </Container>                        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <div>\n                            <Button variant=\"info\" onClick={this.props.onHide} type=\"submit\">Save</Button>{' '}                            \n                            <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n                        </div>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n            ): (<h2>You do not have priviledges  granted to view this section.</h2 > )\n        );\n    }\n}\n\nexport default EditCampRegistrationModal;","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/ExamHelp.js",["173"],"import React, {Component} from \"react\";\nimport {Card, Button} from \"react-bootstrap\";\n\n\nclass ExamHelp extends Component\n{\n    constructor(props)\n    {\n        super(props);\n    }\n\n    render()\n    {\n        return (\n            <Card>\n                <Card.Header>\n                    <div className=\"d-flex\">\n                        <div style={{display: \"flex\", alignItems: \"center\"}}>HELP</div>                        \n                        <Button className=\"ml-auto\" variant=\"secondary\" onClick={this.props.toggleHelpSectionHandler}>Hide</Button>\n                    </div>     \n                </Card.Header>\n                <Card.Body>                    \n                    <Card.Text>\n                        This is a help section for the Exam component.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default ExamHelp;","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/AddCamp.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/camp/AddParticipantToCampModal.js",["174","175","176","177","178"],"import React, {Component} from \"react\";\nimport {\n    Modal, \n    Form,\n    Button,\n    Row,\n    Container\n    } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport CrudTableComponent from \"../../CrudTableComponent\";\nimport { textFilter } from 'react-bootstrap-table2-filter';\n\nimport AuthService from \"../../../service/auth-service\";\n\n\nconst currentUser = AuthService.getCurrentUser();\nconst CAMP_REGISTRATION_API_URL = \"http://localhost:8081/camp_registrations\";\nconst USERS_API_URL = \"http://localhost:8081/users\";\nconst CAMP_EVENTS = \"http://localhost:8081/camp_events\"; \nconst CAMP_REGISTRATIONS = \"http://localhost:8081/camp_registrations\"; \n\nconst columns = [\n    {\n        dataField: \"id\",\n        sort: false,\n        hidden: true\n    },\n    {\n        dataField: \"fullName\",\n        text: \"Full name\",\n        sort: true, \n        filter: textFilter()           \n    },\n    // {\n    //     dataField: \"email\", \n    //     text: \"Email\",\n    //     sort: false,        \n    //     filter: textFilter(),                       \n    // },\n    {            \n        dataField: \"country\",\n        text: \"Country\",\n        sort: true,\n        filter: textFilter(),\n    },\n    {            \n        dataField: \"club.clubName\",\n        text: \"Club\",\n        sort: true,\n        filter: textFilter(),\n    }\n];\n\n\nclass AddParticipantToCampModal extends Component\n{\n    constructor(props)\n    {        \n        super(props);\n        this.state = {\n            campRegistration: {\n                id: null,\n                user: null,\n                feeReceived: false,\n                sayonaraMeetingParticipation: false,\n                clothingSize: {\n                    value: null,\n                    label: \"\"\n                },\n                accommodation: false,\n                campEvent: {\n                    id: this.props.eventId                    \n                }\n            },\n            clothingSizes: [],\n            selectedRowsIds: []\n        }        \n        this.handleSignUp = this.handleSignUp.bind(this);\n        this.handleRowClick = this.handleRowClick.bind(this);\n        this.handleRowSelection = this.handleRowSelection.bind(this);\n        this.handleClearForm = this.handleClearForm.bind(this);\n    }\n\n    componentDidMount()\n    {        \n        fetch(CAMP_EVENTS + \"/\" + this.props.eventId + \"/clothing_sizes\")\n        .then(response => response.json())\n        .then((data) => {                \n            let cs = [];\n            cs.push( { value: null, label: \"-\" } );\n            data.map((clothingSize) => {\n                cs.push( { value: clothingSize.id, label: clothingSize.clothingSizeName } )\n            })                \n            this.setState({ clothingSizes: cs });\n        })        \n    }\n\n    handleRowClick(selectedRowsIds)\n    {\n        this.setState({             \n            selectedRowsIds: selectedRowsIds            \n        });\n    }\n\n    handleRowSelection(selectedRowsIds)\n    {\n        this.setState({\n            selectedRowsIds: selectedRowsIds\n        });\n    }\n\n    handleClearForm()\n    {\n        this.setState({\n            campRegistration: {\n                id: null,\n                user: null,\n                feeReceived: false,\n                sayonaraMeetingParticipation: false,\n                clothingSize: {\n                    value: null,\n                    label: \"\"\n                },\n                accommodation: false,\n                campEvent: {\n                    id: this.props.eventId                    \n                }\n            },\n            selectedRowsIds: []\n        });\n    }\n    \n    handleSignUp(e)\n    {\n        e.preventDefault();\n        \n        if ( this.state.selectedRowsIds.length == 1 )\n        {   \n            let cs;\n            if ( this.state.campRegistration.clothingSize.value == null && \n                    (this.state.campRegistration.clothingSize.label == \"-\" || this.state.campRegistration.clothingSize.label == \"\") )\n                cs = null;\n            else\n                cs = {\n                    id: this.state.campRegistration.clothingSize.value,\n                    clothingSizeName: this.state.campRegistration.clothingSize.label\n                };\n            let campRegistration = {...this.state.campRegistration, clothingSize: cs, user: {id: this.state.selectedRowsIds[0]}};            \n                        \n            fetch(CAMP_REGISTRATIONS, {\n                method: \"POST\",\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(campRegistration)           \n            })            \n            .then(result => {            \n                return new Promise((resolve, reject) => {\n                    if(result.ok)\n                        resolve(\"Participant added\")\n                    else reject(result);                    \n                })    \n            },\n            error => { console.log(\"not updated\") })    \n            .then( msg => {                \n                this.props.onHide();\n            },\n            error => {\n                error.json()\n                .then((text) => {                    \n                    alert(text.message);\n                })                \n            })\n        }\n        else alert(\"Please choose one person.\");\n    }\n\n    render()\n    {\n        const clothingSizesSelectStyles = {\n            container: base => ({\n                ...base,\n                flex: 1,                \n            })\n        };\n\n        return (\n            currentUser != null && currentUser.roles.includes(\"ROLE_ADMIN\") ?\n            (\n                <Modal \n                    show={this.props.show}                \n                    onHide={this.props.onHide}\n                    onEnter={() => this.handleClearForm()}                \n                    animation=\"true\"\n                    size=\"lg\"\n                    centered=\"true\"                \n                >\n                <Form onSubmit={this.handleSignUp}>\n                    <Modal.Header>\n                        Add a participant\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Container>                            \n                            {this.props.sayonaraMeeting && (\n                                <Form.Group as={Row}>\n                                    <Form.Label column sm=\"4\">Sayonara participation</Form.Label>\n                                    <Form.Check column sm=\"4\"\n                                        type=\"checkbox\"\n                                        name=\"sayonaraMeetingParticipation\" \n                                        style={{display: \"flex\", alignItems: \"center\"}}\n                                        checked={this.state.campRegistration.sayonaraMeetingParticipation}\n                                        onChange={e => { \n                                            this.setState({ \n                                                campRegistration: {...this.state.campRegistration, sayonaraMeetingParticipation: e.target.checked} \n                                            }) \n                                        }}\n                                    />\n                                </Form.Group>\n                            )}                            \n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Clothing size</Form.Label>\n                                <Select\n                                    styles={clothingSizesSelectStyles}\n                                    options={this.state.clothingSizes}                                    \n                                    value={this.state.campRegistration.clothingSize}\n                                    onChange={clothingSize => {                                        \n                                        this.setState({ campRegistration: {...this.state.campRegistration, clothingSize: clothingSize} })                                        \n                                    }}\n                                />\n                            </Form.Group>                        \n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Accommodation</Form.Label>\n                                <Form.Check column sm=\"4\"\n                                    type=\"checkbox\"\n                                    name=\"accommodation\" \n                                    style={{display: \"flex\", alignItems: \"center\"}}\n                                    checked={this.state.campRegistration.accommodation}\n                                    onChange={e => { this.setState({ campRegistration: {...this.state.campRegistration, accommodation: e.target.checked} }) }}\n                                />\n                            </Form.Group>\n                        </Container>\n                        <Container>\n                            <Form.Group as={Row}>\n                                <Form.Label column sm=\"4\">Select a person: </Form.Label>\n                            </Form.Group>\n                            <CrudTableComponent itemsUrl={USERS_API_URL} \n                                                tableColumns={columns} \n                                                selectedItemId={this.handleRowClick}\n                                                selectedIds={this.handleRowSelection}                                                \n                            />                         \n                        </Container>                        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <div>\n                            <Button variant=\"info\" type=\"submit\">Save</Button>{' '}                            \n                            <Button variant=\"secondary\" onClick={this.props.onHide}>Cancel</Button>\n                        </div>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n            ): (<h2>You do not have priviledges  granted to view this section.</h2 >)\n        );\n    }\n}\n\nexport default AddParticipantToCampModal;","/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/AddParticipantToExamModal.js",["179","180","181","182"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/CampRegistrationOptionChooserModal.js",["183","184","185"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/ExamDetails.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/ExamRegistrations.js",["186","187"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/EditExamRegistrationModal.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/Exam.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/AddExam.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/exam_event/Exams.js",["188"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/People.js",["189","190","191","192","193"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/Profile.js",["194","195","196","197","198"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/EventWall.js",["199"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/TournamentEventTile.js",["200","201"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/TournamentRegistrationOptionChooserModal.js",["202","203","204","205","206","207","208","209","210","211","212"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/Tournaments.js",["213"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/Tournament.js",[],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/TournamentDetails.js",["214","215","216","217","218","219"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/TournamentRegistrations.js",["220","221"],"/home/ubuntu/development-projects/react-exercises/ma-club-event-manager-frontend/src/component/admin/tournament/EditTournamentRegistrationModal.js",["222","223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":2,"column":26,"nodeType":"231","messageId":"232","endLine":2,"endColumn":32},{"ruleId":"233","severity":1,"message":"234","line":118,"column":7,"nodeType":"235","endLine":118,"endColumn":114},{"ruleId":"229","severity":1,"message":"236","line":11,"column":7,"nodeType":"231","messageId":"232","endLine":11,"endColumn":14},{"ruleId":"229","severity":1,"message":"237","line":3,"column":6,"nodeType":"231","messageId":"232","endLine":3,"endColumn":15},{"ruleId":"229","severity":1,"message":"238","line":4,"column":6,"nodeType":"231","messageId":"232","endLine":4,"endColumn":9},{"ruleId":"229","severity":1,"message":"239","line":5,"column":6,"nodeType":"231","messageId":"232","endLine":5,"endColumn":9},{"ruleId":"229","severity":1,"message":"240","line":6,"column":6,"nodeType":"231","messageId":"232","endLine":6,"endColumn":12},{"ruleId":"229","severity":1,"message":"241","line":9,"column":25,"nodeType":"231","messageId":"232","endLine":9,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":115,"column":17,"nodeType":"244","endLine":115,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":138,"column":17,"nodeType":"244","endLine":138,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":140,"column":17,"nodeType":"244","endLine":140,"endColumn":27},{"ruleId":"229","severity":1,"message":"239","line":5,"column":5,"nodeType":"231","messageId":"232","endLine":5,"endColumn":8},{"ruleId":"229","severity":1,"message":"238","line":6,"column":5,"nodeType":"231","messageId":"232","endLine":6,"endColumn":8},{"ruleId":"245","severity":1,"message":"246","line":32,"column":66,"nodeType":"247","messageId":"248","endLine":32,"endColumn":68},{"ruleId":"249","severity":1,"message":"250","line":33,"column":43,"nodeType":"251","messageId":"252","endLine":33,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":32,"column":66,"nodeType":"247","messageId":"248","endLine":32,"endColumn":68},{"ruleId":"249","severity":1,"message":"250","line":33,"column":43,"nodeType":"251","messageId":"252","endLine":33,"endColumn":45},{"ruleId":"249","severity":1,"message":"250","line":74,"column":86,"nodeType":"251","messageId":"252","endLine":74,"endColumn":88},{"ruleId":"229","severity":1,"message":"253","line":9,"column":16,"nodeType":"231","messageId":"232","endLine":9,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":144,"column":48,"nodeType":"251","messageId":"252","endLine":144,"endColumn":50},{"ruleId":"245","severity":1,"message":"254","line":56,"column":37,"nodeType":"247","messageId":"255","endLine":56,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":88,"column":111,"nodeType":"251","messageId":"252","endLine":88,"endColumn":113},{"ruleId":"256","severity":1,"message":"257","line":7,"column":5,"nodeType":"258","messageId":"259","endLine":10,"endColumn":6},{"ruleId":"229","severity":1,"message":"260","line":17,"column":7,"nodeType":"231","messageId":"232","endLine":17,"endColumn":32},{"ruleId":"245","severity":1,"message":"254","line":91,"column":37,"nodeType":"247","messageId":"255","endLine":91,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":137,"column":48,"nodeType":"251","messageId":"252","endLine":137,"endColumn":50},{"ruleId":"249","severity":1,"message":"250","line":141,"column":69,"nodeType":"251","messageId":"252","endLine":141,"endColumn":71},{"ruleId":"249","severity":1,"message":"250","line":141,"column":126,"nodeType":"251","messageId":"252","endLine":141,"endColumn":128},{"ruleId":"229","severity":1,"message":"261","line":9,"column":8,"nodeType":"231","messageId":"232","endLine":9,"endColumn":14},{"ruleId":"229","severity":1,"message":"262","line":17,"column":7,"nodeType":"231","messageId":"232","endLine":17,"endColumn":32},{"ruleId":"229","severity":1,"message":"263","line":19,"column":7,"nodeType":"231","messageId":"232","endLine":19,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":112,"column":48,"nodeType":"251","messageId":"252","endLine":112,"endColumn":50},{"ruleId":"245","severity":1,"message":"254","line":53,"column":37,"nodeType":"247","messageId":"255","endLine":53,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":87,"column":65,"nodeType":"251","messageId":"252","endLine":87,"endColumn":67},{"ruleId":"249","severity":1,"message":"250","line":87,"column":122,"nodeType":"251","messageId":"252","endLine":87,"endColumn":124},{"ruleId":"229","severity":1,"message":"263","line":17,"column":7,"nodeType":"231","messageId":"232","endLine":17,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":109,"column":48,"nodeType":"251","messageId":"252","endLine":109,"endColumn":50},{"ruleId":"249","severity":1,"message":"250","line":75,"column":86,"nodeType":"251","messageId":"252","endLine":75,"endColumn":88},{"ruleId":"229","severity":1,"message":"264","line":5,"column":5,"nodeType":"231","messageId":"232","endLine":5,"endColumn":9},{"ruleId":"229","severity":1,"message":"239","line":6,"column":5,"nodeType":"231","messageId":"232","endLine":6,"endColumn":8},{"ruleId":"229","severity":1,"message":"240","line":7,"column":5,"nodeType":"231","messageId":"232","endLine":7,"endColumn":11},{"ruleId":"229","severity":1,"message":"265","line":9,"column":8,"nodeType":"231","messageId":"232","endLine":9,"endColumn":21},{"ruleId":"256","severity":1,"message":"257","line":51,"column":5,"nodeType":"258","messageId":"259","endLine":54,"endColumn":6},{"ruleId":"229","severity":1,"message":"266","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":35},{"ruleId":"229","severity":1,"message":"267","line":3,"column":9,"nodeType":"231","messageId":"232","endLine":3,"endColumn":16},{"ruleId":"229","severity":1,"message":"268","line":3,"column":18,"nodeType":"231","messageId":"232","endLine":3,"endColumn":30},{"ruleId":"229","severity":1,"message":"269","line":3,"column":32,"nodeType":"231","messageId":"232","endLine":3,"endColumn":38},{"ruleId":"256","severity":1,"message":"257","line":10,"column":5,"nodeType":"258","messageId":"259","endLine":13,"endColumn":6},{"ruleId":"245","severity":1,"message":"270","line":41,"column":50,"nodeType":"247","messageId":"248","endLine":41,"endColumn":52},{"ruleId":"245","severity":1,"message":"246","line":32,"column":78,"nodeType":"247","messageId":"248","endLine":32,"endColumn":80},{"ruleId":"249","severity":1,"message":"250","line":33,"column":49,"nodeType":"251","messageId":"252","endLine":33,"endColumn":51},{"ruleId":"271","severity":1,"message":"272","line":44,"column":17,"nodeType":"273","messageId":"252","endLine":44,"endColumn":30},{"ruleId":"245","severity":1,"message":"254","line":65,"column":33,"nodeType":"247","messageId":"255","endLine":65,"endColumn":35},{"ruleId":"245","severity":1,"message":"254","line":76,"column":35,"nodeType":"247","messageId":"255","endLine":76,"endColumn":37},{"ruleId":"245","severity":1,"message":"254","line":87,"column":42,"nodeType":"247","messageId":"255","endLine":87,"endColumn":44},{"ruleId":"271","severity":1,"message":"272","line":116,"column":17,"nodeType":"273","messageId":"252","endLine":116,"endColumn":30},{"ruleId":"249","severity":1,"message":"250","line":131,"column":67,"nodeType":"251","messageId":"252","endLine":131,"endColumn":69},{"ruleId":"249","severity":1,"message":"250","line":131,"column":126,"nodeType":"251","messageId":"252","endLine":131,"endColumn":128},{"ruleId":"249","severity":1,"message":"250","line":141,"column":69,"nodeType":"251","messageId":"252","endLine":141,"endColumn":71},{"ruleId":"249","severity":1,"message":"250","line":141,"column":130,"nodeType":"251","messageId":"252","endLine":141,"endColumn":132},{"ruleId":"249","severity":1,"message":"250","line":151,"column":76,"nodeType":"251","messageId":"252","endLine":151,"endColumn":78},{"ruleId":"249","severity":1,"message":"250","line":151,"column":144,"nodeType":"251","messageId":"252","endLine":151,"endColumn":146},{"ruleId":"249","severity":1,"message":"250","line":74,"column":86,"nodeType":"251","messageId":"252","endLine":74,"endColumn":88},{"ruleId":"229","severity":1,"message":"274","line":1,"column":10,"nodeType":"231","messageId":"232","endLine":1,"endColumn":17},{"ruleId":"249","severity":1,"message":"275","line":233,"column":44,"nodeType":"251","messageId":"252","endLine":233,"endColumn":46},{"ruleId":"249","severity":1,"message":"250","line":235,"column":50,"nodeType":"251","messageId":"252","endLine":235,"endColumn":52},{"ruleId":"249","severity":1,"message":"275","line":284,"column":44,"nodeType":"251","messageId":"252","endLine":284,"endColumn":46},{"ruleId":"249","severity":1,"message":"250","line":286,"column":50,"nodeType":"251","messageId":"252","endLine":286,"endColumn":52},{"ruleId":"249","severity":1,"message":"275","line":328,"column":44,"nodeType":"251","messageId":"252","endLine":328,"endColumn":46},{"ruleId":"229","severity":1,"message":"253","line":9,"column":16,"nodeType":"231","messageId":"232","endLine":9,"endColumn":22},{"ruleId":"249","severity":1,"message":"250","line":160,"column":48,"nodeType":"251","messageId":"252","endLine":160,"endColumn":50},{"ruleId":"249","severity":1,"message":"250","line":153,"column":103,"nodeType":"251","messageId":"252","endLine":153,"endColumn":105},{"ruleId":"249","severity":1,"message":"250","line":162,"column":107,"nodeType":"251","messageId":"252","endLine":162,"endColumn":109},{"ruleId":"249","severity":1,"message":"250","line":171,"column":121,"nodeType":"251","messageId":"252","endLine":171,"endColumn":123},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'API_URL' is assigned a value but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'textFilter' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SortUp' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CAMP_REGISTRATION_API_URL' is assigned a value but never used.","'Select' is defined but never used.","'EXAM_REGISTRATION_API_URL' is assigned a value but never used.","'EXAM_EVENTS' is assigned a value but never used.","'Form' is defined but never used.","'filterFactory' is defined but never used.","'Fragment' is defined but never used.","'MDBIcon' is defined but never used.","'MDBContainer' is defined but never used.","'MDBBtn' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","no-dupe-keys","Duplicate key 'accommodation'.","ObjectExpression","'resolve' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]